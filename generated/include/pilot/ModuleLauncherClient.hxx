
// AUTO GENERATED by vnxcppcodegen

#ifndef INCLUDE_pilot_ModuleLauncher_CLIENT_HXX_
#define INCLUDE_pilot_ModuleLauncher_CLIENT_HXX_

#include <vnx/Client.h>
#include <vnx/Object.hpp>


namespace pilot {

class ModuleLauncherClient : public vnx::Client {
public:
	ModuleLauncherClient(const std::string& service_name);
	
	ModuleLauncherClient(vnx::Hash64 service_addr);
	
	void launch(const ::vnx::Object& config = ::vnx::Object());
	
	void launch_async(const ::vnx::Object& config = ::vnx::Object());
	
	void add(const ::vnx::Object& config = ::vnx::Object());
	
	void add_async(const ::vnx::Object& config = ::vnx::Object());
	
	void stop(const std::string& name = "");
	
	void stop_async(const std::string& name = "");
	
	void stop_all();
	
	void stop_all_async();
	
	std::vector<std::string> get_names();
	
};


} // namespace pilot

#endif // INCLUDE_pilot_ModuleLauncher_CLIENT_HXX_
